#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ËÆ∏ÂèØËØÅÊ†áÁ≠æÈ°µ - Áã¨Á´ãÊ®°Âùó
"""

from PyQt5.QtWidgets import (
    QWidget, QVBoxLayout, QHBoxLayout, QGroupBox, 
    QPushButton, QLabel, QLineEdit, QTextEdit
)
from PyQt5.QtGui import QFont


class LicenseTab:
    """ËÆ∏ÂèØËØÅÊ†áÁ≠æÈ°µ"""
    
    def __init__(self, main_window):
        """
        ÂàùÂßãÂåñËÆ∏ÂèØËØÅÊ†áÁ≠æÈ°µ
        
        Args:
            main_window: ‰∏ªÁ™óÂè£ÂÆû‰æã
        """
        self.main_window = main_window
    
    def create_widget(self) -> QWidget:
        """ÂàõÂª∫ËÆ∏ÂèØËØÅÊ†áÁ≠æÈ°µÁöÑUI"""
        widget = QWidget()
        layout = QVBoxLayout()
        
        # ËÆ∏ÂèØËØÅÁä∂ÊÄÅÂå∫Âüü
        layout.addWidget(self._create_status_area())
        
        # Á°¨‰ª∂ÊåáÁ∫πÂå∫Âüü
        layout.addWidget(self._create_hardware_area())
        
        # ËÆ∏ÂèØËØÅËæìÂÖ•Âå∫Âüü
        layout.addWidget(self._create_input_area())
        
        # Êìç‰ΩúËÆ∞ÂΩïÂå∫Âüü
        layout.addWidget(self._create_log_area())
        
        widget.setLayout(layout)
        return widget
    
    def _create_status_area(self) -> QGroupBox:
        """ÂàõÂª∫ËÆ∏ÂèØËØÅÁä∂ÊÄÅÂå∫Âüü"""
        status_group = QGroupBox("üîê ËÆ∏ÂèØËØÅÁä∂ÊÄÅ")
        status_layout = QVBoxLayout()
        
        # ËÆ∏ÂèØËØÅÁä∂ÊÄÅÊ†áÁ≠æ
        if self.main_window.license_info and self.main_window.is_licensed:
            status_text = (f"‚úÖ ËÆ∏ÂèØËØÅÊúâÊïà | Ââ©‰ΩôÂ§©Êï∞: {self.main_window.license_info['remaining_days']} Â§© | "
                          f"ËøáÊúüÊó∂Èó¥: {self.main_window.license_info['expire_date']}")
            if self.main_window.license_info.get('user_info'):
                status_text += f" | Áî®Êà∑: {self.main_window.license_info['user_info']}"
            status_color = "color: green;"
        else:
            status_text = "‚ö†Ô∏è ËØïÁî®Ê®°Âºè | ÂäüËÉΩÂèóÈôê | ËØ∑ÊøÄÊ¥ªËÆ∏ÂèØËØÅËé∑ÂæóÂÆåÊï¥ÂäüËÉΩ"
            status_color = "color: orange;"
        
        self.main_window.license_status_label = QLabel(status_text)
        self.main_window.license_status_label.setStyleSheet(
            f"padding: 10px; font-weight: bold; {status_color}")
        status_layout.addWidget(self.main_window.license_status_label)
        
        # Â¶ÇÊûúÊòØËØïÁî®Ê®°ÂºèÔºåÊòæÁ§∫ÈôêÂà∂ËØ¥Êòé
        if not self.main_window.is_licensed:
            trial_info = QLabel(self.main_window.get_trial_limitations_text())
            trial_info.setStyleSheet("""
                background-color: #fff3cd;
                border: 1px solid #ffeaa7;
                border-radius: 4px;
                padding: 15px;
                margin: 10px 0;
                color: #856404;
                font-size: 12px;
            """)
            trial_info.setWordWrap(True)
            status_layout.addWidget(trial_info)
        
        status_group.setLayout(status_layout)
        return status_group
    
    def _create_hardware_area(self) -> QGroupBox:
        """ÂàõÂª∫Á°¨‰ª∂ÊåáÁ∫πÂå∫Âüü"""
        hardware_group = QGroupBox("üíª Á°¨‰ª∂ÊåáÁ∫π")
        hardware_layout = QVBoxLayout()
        
        # Á°¨‰ª∂ÊåáÁ∫πÊòæÁ§∫
        hardware_fp = self.main_window.license_system.get_hardware_fingerprint()
        
        hardware_info_layout = QHBoxLayout()
        hardware_info_layout.addWidget(QLabel("ÂΩìÂâçÁ°¨‰ª∂ÊåáÁ∫π:"))
        
        self.main_window.hardware_fp_edit = QLineEdit(hardware_fp)
        self.main_window.hardware_fp_edit.setReadOnly(True)
        self.main_window.hardware_fp_edit.setFont(QFont("Consolas", 10))
        hardware_info_layout.addWidget(self.main_window.hardware_fp_edit)
        
        copy_fp_btn = QPushButton("üìã Â§çÂà∂")
        copy_fp_btn.clicked.connect(self.main_window.copy_hardware_fingerprint)
        hardware_info_layout.addWidget(copy_fp_btn)
        
        hardware_layout.addLayout(hardware_info_layout)
        
        # ËØ¥ÊòéÊñáÂ≠ó
        hardware_note = QLabel("üìù ËØ∑Â∞ÜÁ°¨‰ª∂ÊåáÁ∫πÂèëÈÄÅÁªôËΩØ‰ª∂ÂºÄÂèëËÄÖ‰ª•Ëé∑ÂèñÊ≠£ÂºèËÆ∏ÂèØËØÅ")
        hardware_note.setStyleSheet("color: #666; font-size: 12px; padding: 5px;")
        hardware_layout.addWidget(hardware_note)
        
        hardware_group.setLayout(hardware_layout)
        return hardware_group
    
    def _create_input_area(self) -> QGroupBox:
        """ÂàõÂª∫ËÆ∏ÂèØËØÅËæìÂÖ•Âå∫Âüü"""
        input_group = QGroupBox("üìù ËÆ∏ÂèØËØÅÊøÄÊ¥ª")
        input_layout = QVBoxLayout()
        
        # ËÆ∏ÂèØËØÅËæìÂÖ•Ê°Ü
        self.main_window.license_input = QTextEdit()
        self.main_window.license_input.setPlaceholderText("ËØ∑Âú®Ê≠§Â§ÑÁ≤òË¥¥‰ªéÂºÄÂèëËÄÖÂ§ÑËé∑ÂæóÁöÑËÆ∏ÂèØËØÅÂÜÖÂÆπ...")
        self.main_window.license_input.setMaximumHeight(150)
        self.main_window.license_input.setFont(QFont("Consolas", 9))
        input_layout.addWidget(self.main_window.license_input)
        
        # ÊåâÈíÆÂå∫Âüü
        button_layout = QHBoxLayout()
        
        verify_btn = QPushButton("‚úÖ È™åËØÅÂπ∂ÊøÄÊ¥ªËÆ∏ÂèØËØÅ")
        verify_btn.setStyleSheet(self._get_button_style('success'))
        verify_btn.clicked.connect(self.main_window.verify_license)
        button_layout.addWidget(verify_btn)
        
        save_btn = QPushButton("üíæ ‰øùÂ≠òËÆ∏ÂèØËØÅ")
        save_btn.setStyleSheet(self._get_button_style('primary'))
        save_btn.clicked.connect(self.main_window.save_license)
        button_layout.addWidget(save_btn)
        
        load_btn = QPushButton("üìÇ ‰ªéÊñá‰ª∂Âä†ËΩΩ")
        load_btn.clicked.connect(self.main_window.load_license_from_file)
        button_layout.addWidget(load_btn)
        
        button_layout.addStretch()
        input_layout.addLayout(button_layout)
        
        input_group.setLayout(input_layout)
        return input_group
    
    def _create_log_area(self) -> QGroupBox:
        """ÂàõÂª∫Êìç‰ΩúËÆ∞ÂΩïÂå∫Âüü"""
        log_group = QGroupBox("üìã Êìç‰ΩúËÆ∞ÂΩï")
        log_layout = QVBoxLayout()
        
        self.main_window.license_log = QTextEdit()
        self.main_window.license_log.setMaximumHeight(150)
        self.main_window.license_log.setReadOnly(True)
        self.main_window.license_log.setFont(QFont("Consolas", 9))
        log_layout.addWidget(self.main_window.license_log)
        
        log_group.setLayout(log_layout)
        
        # ÂàùÂßãÂåñÊó•Âøó‰ø°ÊÅØ
        self._initialize_log()
        
        return log_group
    
    def _initialize_log(self):
        """ÂàùÂßãÂåñÊó•Âøó‰ø°ÊÅØ"""
        if self.main_window.is_licensed:
            self.main_window.license_log_message("‚úÖ Á®ãÂ∫èÂ∑≤ÊéàÊùÉÔºåÂäüËÉΩÂÆåÊï¥ÂèØÁî®")
        else:
            hardware_fp = self.main_window.license_system.get_hardware_fingerprint()
            self.main_window.license_log_message("‚ö†Ô∏è Á®ãÂ∫èËøêË°åÂú®ËØïÁî®Ê®°ÂºèÔºåÂäüËÉΩÂèóÈôê")
            self.main_window.license_log_message(f"üíª ÂΩìÂâçÁ°¨‰ª∂ÊåáÁ∫π: {hardware_fp}")
            self.main_window.license_log_message("üìß ËØ∑ËÅîÁ≥ªÂºÄÂèëËÄÖËé∑ÂèñÊ≠£ÂºèËÆ∏ÂèØËØÅ")
    
    def _get_button_style(self, style_type: str) -> str:
        """Ëé∑ÂèñÊåâÈíÆÊ†∑Âºè"""
        styles = {
            'success': """
                QPushButton {
                    background-color: #28a745;
                    color: white;
                    border: none;
                    padding: 8px 16px;
                    font-size: 12px;
                    font-weight: bold;
                    border-radius: 4px;
                }
                QPushButton:hover {
                    background-color: #218838;
                }
            """,
            'primary': """
                QPushButton {
                    background-color: #007bff;
                    color: white;
                    border: none;
                    padding: 8px 16px;
                    font-size: 12px;
                    font-weight: bold;
                    border-radius: 4px;
                }
                QPushButton:hover {
                    background-color: #0056b3;
                }
            """
        }
        return styles.get(style_type, "") 